package carreras.gui;

import carreras.dto.Carrera;
import carreras.logica.LogicaCarreras;
import corredores.dto.Corredor;
import corredores.dto.Participante;
import corredores.tableModel.CorredoresTableModel;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.TableRowSorter;
import logicaParaFicheros.LogicaFicherosCSV;

/**
 *
 * @author USER
 */
public class AnularParticipante extends javax.swing.JDialog {

    private CorredoresTableModel ctm;
    private TableRowSorter sorter;
    private Carrera carrera;
    private Participante participante;
    private LogicaFicherosCSV lf = new LogicaFicherosCSV();

    /**
     * Creates new form AnularParticipante
     */
    public AnularParticipante(java.awt.Frame parent, boolean modal, Carrera carrera) {
        super(parent, modal);
        initComponents();
        this.setTitle("  ANULACIÃ“N DE PARTICIPANTES EN:  " + carrera.getNomCarrera().toUpperCase());
        this.carrera = carrera;
        LogicaCarreras.setListaCorredores(carrera.getInscritos());
        cargarTableModelYaInscritos();
    }

    public void cargarTableModelYaInscritos() {
        ctm = new CorredoresTableModel(LogicaCarreras.getListaCorredores());
        jTableAnularParticipante.setModel(ctm);
        sorter = new TableRowSorter<>(ctm);
        jTableAnularParticipante.setRowSorter(sorter);
        List<RowSorter.SortKey> sortkeys1 = new ArrayList<RowSorter.SortKey>();
        sortkeys1.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        sorter.setSortKeys(sortkeys1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAnularParticipante = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemEliminar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        jTableAnularParticipante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableAnularParticipante);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jMenu1.setText(org.openide.util.NbBundle.getMessage(AnularParticipante.class, "AnularParticipante.jMenu1.text")); // NOI18N
        jMenu1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jMenuItemEliminar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuItemEliminar.setText(org.openide.util.NbBundle.getMessage(AnularParticipante.class, "AnularParticipante.jMenuItemEliminar.text")); // NOI18N
        jMenuItemEliminar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMenuItemEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEliminarActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemEliminar);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEliminarActionPerformed
        try {
            int seleccion = jTableAnularParticipante.convertRowIndexToModel(jTableAnularParticipante.getSelectedRow());
            Corredor corredor = carrera.getInscritos().get(seleccion);
            int confirmacion = JOptionPane.showConfirmDialog(this, "Desea eliminar al corredor\n"
                    + corredor.getNombre(), "ELIMINAR CORREDOR", JOptionPane.YES_NO_OPTION);
            if (confirmacion == JOptionPane.YES_OPTION) {
                // Corredor corredor = participante.getCorredor();
                /* if (corredor.getInscripciones().contains(carrera)) {
                    boolean s=corredor.getInscripciones().remove(carrera);
                    System.out.println(s);
                }*/
                for (Participante p : carrera.getListaParticipantes()) {
                    if (corredor.getNombre().equals(p.getNomParticipante())) {
                        participante = p;
                        break;
                    }
                }
                String dorsal = participante.getDorsal();
                carrera.getListaDorsales().add(Integer.valueOf(dorsal));
                boolean s = carrera.getListaParticipantes().remove(participante);
                boolean s1 = carrera.getInscritos().remove(corredor);
                boolean s2 = corredor.getInscripciones().remove(carrera);
                if (s == true && s1 == true && s2 == true) {
                    JOptionPane.showMessageDialog(this, "Participante eliminado");
                    String ruta = "ficheros" + File.separator + "participantes" + File.separator + carrera.getNomCarrera() + ".csv";
                    lf.abrirFicheroCSVEscrituraParticipantes(ruta, carrera.getListaParticipantes());
                    ctm.fireTableDataChanged();
                } else {
                    JOptionPane.showMessageDialog(this, "No se ha podido eliminar");
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "No ha seleccionado participante", "", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemEliminarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemEliminar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAnularParticipante;
    // End of variables declaration//GEN-END:variables
}
