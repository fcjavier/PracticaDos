/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package carreras.gui;

import carreras.dto.Carrera;
import carreras.logica.LogicaCarreras;
import carreras.tableModel.ParticipantesTableModel;
import corredores.dto.Participante;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author USER
 */
public class CarreraEnCurso extends javax.swing.JDialog {

    Carrera carrera;
    ParticipantesTableModel ptm;
    TableRowSorter<ParticipantesTableModel> sorter;

    /**
     * Creates new form CarreraEnCurso
     *
     * @param parent
     * @param modal
     * @param carrera
     */
    public CarreraEnCurso(java.awt.Frame parent, boolean modal, Carrera carrera) {
        super(parent, modal);
        initComponents();
        this.carrera = carrera;
        cargarTable();
    }

    public void cargarTable() {
        ptm = new ParticipantesTableModel(carrera.getListaParticipantes());
        jTableCarreraIniciada.setModel(ptm);
        sorter = new TableRowSorter<>(ptm);
        jTableCarreraIniciada.setRowSorter(sorter);
        List<RowSorter.SortKey> sortKeys = new ArrayList<>();
        sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        sorter.setSortKeys(sortKeys);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        timerData1 = new timersavedata.TimerData();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCarreraIniciada = new javax.swing.JTable();
        cronometro = new jcronometro.Cronometro();
        jToggleButtonIniciarCrono = new javax.swing.JToggleButton();
        jToggleButtonDetenerCrono = new javax.swing.JToggleButton();
        jToggleButtonReiniciarCrono = new javax.swing.JToggleButton();
        jLabelTiempoCorredor = new javax.swing.JLabel();
        jToggleButtonFinalCarrera = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        timerData1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        timerData1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jTableCarreraIniciada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableCarreraIniciada);

        cronometro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cronometro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cronometro.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cronometro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cronometroMouseClicked(evt);
            }
        });

        jToggleButtonIniciarCrono.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jToggleButtonIniciarCrono.setText(org.openide.util.NbBundle.getMessage(CarreraEnCurso.class, "CarreraEnCurso.jToggleButtonIniciarCrono.text")); // NOI18N
        jToggleButtonIniciarCrono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonIniciarCronoActionPerformed(evt);
            }
        });

        jToggleButtonDetenerCrono.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jToggleButtonDetenerCrono.setText(org.openide.util.NbBundle.getMessage(CarreraEnCurso.class, "CarreraEnCurso.jToggleButtonDetenerCrono.text")); // NOI18N
        jToggleButtonDetenerCrono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonDetenerCronoActionPerformed(evt);
            }
        });

        jToggleButtonReiniciarCrono.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jToggleButtonReiniciarCrono.setText(org.openide.util.NbBundle.getMessage(CarreraEnCurso.class, "CarreraEnCurso.jToggleButtonReiniciarCrono.text")); // NOI18N
        jToggleButtonReiniciarCrono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonReiniciarCronoActionPerformed(evt);
            }
        });

        jLabelTiempoCorredor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelTiempoCorredor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTiempoCorredor.setText(org.openide.util.NbBundle.getMessage(CarreraEnCurso.class, "CarreraEnCurso.jLabelTiempoCorredor.text")); // NOI18N
        jLabelTiempoCorredor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelTiempoCorredor.setMinimumSize(new java.awt.Dimension(79, 27));
        jLabelTiempoCorredor.setOpaque(true);

        jToggleButtonFinalCarrera.setText(org.openide.util.NbBundle.getMessage(CarreraEnCurso.class, "CarreraEnCurso.jToggleButtonFinalCarrera.text")); // NOI18N
        jToggleButtonFinalCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonFinalCarreraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(timerData1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cronometro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButtonReiniciarCrono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButtonDetenerCrono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButtonIniciarCrono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelTiempoCorredor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToggleButtonFinalCarrera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(timerData1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cronometro, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButtonIniciarCrono)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButtonDetenerCrono)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButtonReiniciarCrono)
                .addGap(18, 18, 18)
                .addComponent(jLabelTiempoCorredor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jToggleButtonFinalCarrera)
                .addGap(0, 95, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButtonIniciarCronoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonIniciarCronoActionPerformed
        cronometro.setEstado(true);
    }//GEN-LAST:event_jToggleButtonIniciarCronoActionPerformed

    private void jToggleButtonDetenerCronoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonDetenerCronoActionPerformed
        cronometro.setEstado(false);
    }//GEN-LAST:event_jToggleButtonDetenerCronoActionPerformed

    private void jToggleButtonReiniciarCronoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonReiniciarCronoActionPerformed
        cronometro.setHor(0);
        cronometro.setMin(0);
        cronometro.setSeg(0);
    }//GEN-LAST:event_jToggleButtonReiniciarCronoActionPerformed

    private void cronometroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cronometroMouseClicked
        try {
            String tiempo = cronometro.getText();
            jLabelTiempoCorredor.setText(tiempo);
            String llegada = JOptionPane.showInputDialog(this, "DORSAL PARTICIPANTE", "ASIGNAR DORSAL", JOptionPane.QUESTION_MESSAGE);
            for (Participante p : carrera.getListaParticipantes()) {
                if (llegada.equalsIgnoreCase(p.getDorsal())) {
                    p.setTiempo(tiempo);
                    ptm.fireTableDataChanged();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "El dorsal no existe");
        }
    }//GEN-LAST:event_cronometroMouseClicked

    private void jToggleButtonFinalCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonFinalCarreraActionPerformed
        carrera.setEstado(true);
        LogicaCarreras.getListaCarrerasFinalizadas().add(carrera);
        boolean cambiar = LogicaCarreras.getListaCarreras().remove(carrera);
        if(cambiar){
            JOptionPane.showMessageDialog(this, "Carrera guardada como finalizada.", "", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_jToggleButtonFinalCarreraActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private jcronometro.Cronometro cronometro;
    private javax.swing.JLabel jLabelTiempoCorredor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCarreraIniciada;
    private javax.swing.JToggleButton jToggleButtonDetenerCrono;
    private javax.swing.JToggleButton jToggleButtonFinalCarrera;
    private javax.swing.JToggleButton jToggleButtonIniciarCrono;
    private javax.swing.JToggleButton jToggleButtonReiniciarCrono;
    private timersavedata.TimerData timerData1;
    // End of variables declaration//GEN-END:variables
}
