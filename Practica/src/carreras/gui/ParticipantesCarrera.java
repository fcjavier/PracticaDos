/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package carreras.gui;

import carreras.dto.Carrera;
import carreras.tableModel.ParticipantesTableModel;
import corredores.dto.Participante;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.TableRowSorter;
import logicaParaFicheros.LogicaFicherosCSV;
import run.PaginaPrincipal;

/**
 *
 * @author USER
 */
public class ParticipantesCarrera extends javax.swing.JDialog {

    ParticipantesTableModel ptm;
    LogicaFicherosCSV lf = new LogicaFicherosCSV();
    Carrera carrera;
    TableRowSorter<ParticipantesTableModel> sorter;
    PaginaPrincipal paginaPrincipal;
    boolean activar;

    /**
     * Creates new form ParticipantesCarrera
     *
     * @param parent
     * @param modal
     * @param carrera
     * @param activar
     */
    public ParticipantesCarrera(java.awt.Frame parent, boolean modal, Carrera carrera,boolean activar) {
        super(parent, modal);
        paginaPrincipal = (PaginaPrincipal) parent;
        initComponents();
        this.carrera = carrera;
        this.activar=activar;
        jToggleButtonAnularCorredor.setVisible(activar);
        cargarTablaParticipantes();
    }

    public void cargarTablaParticipantes() {
        ptm = new ParticipantesTableModel(carrera.getListaParticipantes());
        jTableParticipantes.setModel(ptm);
        sorter = new TableRowSorter<>(ptm);
        jTableParticipantes.setRowSorter(sorter);
        List<RowSorter.SortKey> sortKeys = new ArrayList<>();
        sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        sorter.setSortKeys(sortKeys);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableParticipantes = new javax.swing.JTable();
        jToggleButtonAnularCorredor = new javax.swing.JToggleButton();
        jComboBoxFiltrar = new javax.swing.JComboBox<>();
        jTextFieldFiltrar = new javax.swing.JTextField();
        jToggleButtonFiltrar = new javax.swing.JToggleButton();
        jToggleButtonSalir = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTableParticipantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableParticipantes);

        jToggleButtonAnularCorredor.setText(org.openide.util.NbBundle.getMessage(ParticipantesCarrera.class, "ParticipantesCarrera.jToggleButtonAnularCorredor.text")); // NOI18N
        jToggleButtonAnularCorredor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonAnularCorredorActionPerformed(evt);
            }
        });

        jComboBoxFiltrar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Filtrar por...", "Nombre", "Dorsal" }));

        jTextFieldFiltrar.setText(org.openide.util.NbBundle.getMessage(ParticipantesCarrera.class, "ParticipantesCarrera.jTextFieldFiltrar.text")); // NOI18N

        jToggleButtonFiltrar.setText(org.openide.util.NbBundle.getMessage(ParticipantesCarrera.class, "ParticipantesCarrera.jToggleButtonFiltrar.text")); // NOI18N
        jToggleButtonFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonFiltrarActionPerformed(evt);
            }
        });

        jToggleButtonSalir.setText(org.openide.util.NbBundle.getMessage(ParticipantesCarrera.class, "ParticipantesCarrera.jToggleButtonSalir.text")); // NOI18N
        jToggleButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jToggleButtonAnularCorredor, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(jToggleButtonSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jToggleButtonFiltrar, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(jTextFieldFiltrar)
                            .addComponent(jComboBoxFiltrar, 0, 142, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButtonAnularCorredor)
                    .addComponent(jComboBoxFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jToggleButtonFiltrar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jToggleButtonSalir)))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButtonFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonFiltrarActionPerformed
        if (jComboBoxFiltrar.getSelectedItem().equals("Nombre")) {
            RowFilter<ParticipantesTableModel, Integer> rf = RowFilter.regexFilter(jTextFieldFiltrar.getText(), 0);
            sorter.setRowFilter(rf);
        } else if (jComboBoxFiltrar.getSelectedItem().equals("Dorsal")) {
            RowFilter<ParticipantesTableModel, Integer> rf1 = RowFilter.regexFilter(jTextFieldFiltrar.getText(), 1);
            sorter.setRowFilter(rf1);
        }
        jTextFieldFiltrar.setText("");
    }//GEN-LAST:event_jToggleButtonFiltrarActionPerformed

    private void jToggleButtonAnularCorredorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonAnularCorredorActionPerformed
        try {
            int seleccion = jTableParticipantes.convertRowIndexToModel(jTableParticipantes.getSelectedRow());
            Participante participante = carrera.getListaParticipantes().get(seleccion);
            int confirmacion = JOptionPane.showConfirmDialog(this, "Desea eliminar al corredor\n"
                    + participante.getNomParticipante(), "ELIMINAR CORREDOR", JOptionPane.YES_NO_OPTION);
            if (confirmacion == JOptionPane.YES_OPTION) {
                String dorsal = participante.getDorsal();
                carrera.getListaDorsales().add(Integer.valueOf(dorsal));
                boolean s = carrera.getListaParticipantes().remove(participante);
                if (s == true) {
                    JOptionPane.showMessageDialog(this, "Participante eliminado");
                    String ruta = "ficheros/participantes/" + carrera.getNomCarrera() + ".csv";
                    lf.abrirFicheroCSVEscrituraParticipantes(ruta, carrera.getListaParticipantes());
                    ptm.fireTableDataChanged();
                } else {
                    JOptionPane.showMessageDialog(this, "No se ha podido eliminar");
                }
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "No ha seleccionado participante", "", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jToggleButtonAnularCorredorActionPerformed

    private void jToggleButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonSalirActionPerformed
         dispose();
    }//GEN-LAST:event_jToggleButtonSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBoxFiltrar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableParticipantes;
    private javax.swing.JTextField jTextFieldFiltrar;
    private javax.swing.JToggleButton jToggleButtonAnularCorredor;
    private javax.swing.JToggleButton jToggleButtonFiltrar;
    private javax.swing.JToggleButton jToggleButtonSalir;
    // End of variables declaration//GEN-END:variables
}
